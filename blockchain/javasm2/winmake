##WINDOWS sm2jni.dll
LIBCRYPTOS=..\libs\libcrypto.lib
DLLCRYPTOS=..\libs\libcrypto-1_1-x64.dll
JAVADLL=sm2jni.dll
CC=cl
CFLAGS=-D_KTEST_ -DNDEBUG -W3 -wd4090 -Gs0 -GF -Gy -nologo -DOPENSSL_SYS_WIN32  -DWIN32_LEAN_AND_MEAN -DUNICODE -D_UNICODE /O2 
LD=link
LDFLAGS=/nologo /dll
EX_LIBS= ws2_32.lib gdi32.lib advapi32.lib crypt32.lib user32.lib
LIB_CFLAGS=
JAVAINCLUDE=-I "$(JAVA_HOME)\include" -I "$(JAVA_HOME)\include\win32"
INC=/I "." /I "..\..\include" /I "..\csm2" $(JAVAINCLUDE) 

!IF DEFINED(STATIC)
CFLAGS = $(CFLAGS) /MT
!ELSE
CFLAGS = $(CFLAGS) /MD
!ENDIF

#java_home
!IF DEFINED(JAVA_HOME) && "$(JAVA_HOME)" != ""
JAVAC="$(JAVA_HOME)/bin/javac"
!ENDIF
JAVADLLPATH=-Djava.library.path=.
JAVA=java
all: prepare $(JAVADLL)
prepare:
	javah SM2ForBlockChain
sm2.hex.obj:
	$(CC)  $(INC) $(CFLAGS) -c "..\csm2\sm2.hex.c" 
sm2.bin.obj:
	$(CC)  $(INC) $(CFLAGS) -c "..\csm2\sm2.bin.c"
sm2.err.obj:
	$(CC)  $(INC) $(CFLAGS) -c "..\csm2\sm2.err.c"
SM2ForBlockChain.obj:
	$(CC) $(INC)  $(CFLAGS) -c "SM2ForBlockChain.c"
$(JAVADLL): SM2ForBlockChain.obj sm2.hex.obj sm2.bin.obj  sm2.err.obj
	$(LD) $(LIBCRYPTOS) $(EX_LIBS) $(LDFLAGS) /out:$@ $**
javatest:
	$(JAVAC) SM2ForBlockChain.java
test:javatest $(JAVADLL)
	IF EXIST  $(DLLCRYPTOS) copy /Y $(DLLCRYPTOS) .
	$(JAVA) $(JAVADLLPATH) SM2ForBlockChain
clean:
	del *.obj
	del *.class
	del *.dll
	del *.pdb
	del *.exp
	del *.lib